name: Android CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 17

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Run unit tests
      run: ./gradlew test

    - name: Run Lint
      run: ./gradlew lint

    - name: Build Release APK
      run: ./gradlew assembleRelease
        
    - name: Find APK files
      id: find-apk
      run: |
        mkdir -p apk-files
        find app/build/outputs/apk -name '*.apk' -exec cp {} apk-files/ \;
        echo "APK_FILES=$(ls apk-files/ | tr '\n' ' ')" >> $GITHUB_OUTPUT
        ls -la apk-files/

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-release
        path: apk-files/*.apk

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: app-release
        path: apk-files/

    - name: Verify APK exists
      run: |
        echo "Contents of apk-files:"
        ls -la apk-files/
        if [ ! -f apk-files/*.apk ]; then
          echo "Error: No APK files found!"
          exit 1
        fi

    - name: Get version from Gradle
      id: version
      run: |
        VERSION=$(grep 'versionName' app/build.gradle.kts | cut -d'"' -f2)
        if [ -z "$VERSION" ]; then
          VERSION="0.0.1"
        fi
        echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
        echo "Using version: ${VERSION}"

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.VERSION }}.${{ github.run_number }}
        name: Release v${{ steps.version.outputs.VERSION }}.${{ github.run_number }}
        generate_release_notes: true
        files: apk-files/*.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
